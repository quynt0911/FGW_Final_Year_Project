@model Blank.Models.Reservation
@{
    Layout = "~/Views/Shared/UserLO.cshtml";
}

<!-- Reservation Form -->
<h2 class="text-center mt-4">Make a Reservation</h2>

<!-- User Information -->
<div>
        <h3>User Information</h3>
    <p><strong>User ID:</strong> @Model.CustomerId</p>
    <p><strong>User Name:</strong> @Model.CustomerName</p>
</div>

<!-- Reservation Form -->
<form asp-action="MakeReservation" method="post" id="reservationForm" class="mt-4">
    <!-- Selected Table -->
    <div class="mb-3">
        <label for="selectedTableField" class="form-label">Selected Table</label>
        <div style="display: flex; align-items: center;">
            <input type="text" id="selectedTableField" name="TableId" class="form-control" value="@ViewData["SelectedTableName"] ?? "None" readonly />
            <a href="/Table/ViewT" class="btn btn-secondary ms-3" style="white-space: nowrap;">Select Table</a>
        </div>
    </div>

    <!-- Customer Name -->
    <div class="form-group">
        <label asp-for="CustomerName">Customer Name</label>
        <input asp-for="CustomerName" class="form-control" required />
        <span asp-validation-for="CustomerName" class="text-danger"></span>
    </div>

    <!-- Restaurant Dropdown -->
    <div class="mb-3">
        <label for="RestaurantId" class="form-label">Select Restaurant</label>
        <select asp-for="RestaurantId" class="form-select" id="restaurantDropdown">
            <option value="">-- Select a Branch --</option>
            @if (ViewBag.Restaurants != null && ViewBag.Restaurants is IEnumerable<Blank.Models.Restaurant>)
            {
                foreach (var restaurant in (IEnumerable<Blank.Models.Restaurant>)ViewBag.Restaurants)
                {
                    <option value="@restaurant.RestaurantId">@restaurant.ResName</option>
                }
            }
            else
            {
                <option disabled>No restaurants available</option>
            }
        </select>
    </div>

    <!-- Location Field -->
    <div class="mb-3">
        <label class="form-label">Location</label>
        <input type="text" id="branchLocation" class="form-control" disabled />
    </div>

    <!-- Status Field -->
    <div class="mb-3">
        <label class="form-label">Status</label>
        <input asp-for="RStatus" class="form-control" value="Pending" readonly />
    </div>

    <!-- Reservation Date -->
    <div class="form-group">
        <label for="DateTime">Date and Time</label>
        <input asp-for="DateTime" type="datetime-local" class="form-control" required />
        <span asp-validation-for="DateTime" class="text-danger"></span>
    </div>

    <!-- Special Requests -->
    <div class="form-group">
        <label for="Request">Special Requests</label>
        <textarea asp-for="Request" class="form-control"></textarea>
        <span asp-validation-for="Request" class="text-danger"></span>
    </div>

    <!-- Submit Button -->
    <button type="submit" class="btn btn-primary mt-3 w-100">Submit Reservation</button>
</form>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Fetch restaurants for location updates
        const restaurants = @Html.Raw(Json.Serialize(ViewBag.Restaurants ?? new List<dynamic>()));

        const restaurantDropdown = document.getElementById("restaurantDropdown");
        const branchLocation = document.getElementById("branchLocation");

        // Update branch location on restaurant selection
        restaurantDropdown?.addEventListener("change", () => {
            const selectedId = restaurantDropdown.value;
            const selectedRestaurant = restaurants.find(r => r.restaurantId == selectedId);
            branchLocation.value = selectedRestaurant ? selectedRestaurant.location : "";
        });

        // Load selected table details from session storage
        const selectedTableName = sessionStorage.getItem("selectedTableName");
        const selectedTableId = sessionStorage.getItem("selectedTableId");

        if (selectedTableName) {
            const selectedTableField = document.getElementById("selectedTableField");
            selectedTableField.value = selectedTableName;
        }

        // Clear session storage
        sessionStorage.removeItem("selectedTableName");
        sessionStorage.removeItem("selectedTableId");
    });
</script>

<style>
    .form-label {
        font-weight: bold;
    }

    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: #fff;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }

    .text-center {
        font-weight: bold;
    }
</style>



@* <style>
body {
font-family: Arial, sans-serif;
background-color: #2b2b2b;
color: #f1f1f1;
margin: 0;
padding: 0;
}

h2.text-center {
font-size: 2rem;
font-weight: bold;
color: #f1c40f;
margin-bottom: 20px;
}

.form-label {
font-weight: bold;
color: #f1c40f;
}

.form-control {
border-radius: 5px;
padding: 10px;
color: #212529;
background-color: #fff;
border: 1px solid #ced4da;
}

.form-control:focus {
border-color: #f1c40f;
box-shadow: 0 0 8px rgba(241, 196, 15, 0.5);
}

.form-select {
border-radius: 5px;
padding: 10px;
background-color: #fff;
color: #212529;
border: 1px solid #ced4da;
}

.form-select:focus {
border-color: #f1c40f;
box-shadow: 0 0 8px rgba(241, 196, 15, 0.5);
}

textarea.form-control {
resize: none;
}

#tableDiagram {
border: 1px solid #444;
background-color: #333;
margin-top: 20px;
padding: 10px;
}

.btn {
padding: 10px 20px;
font-size: 1rem;
border-radius: 5px;
text-transform: uppercase;
font-weight: bold;
transition: all 0.3s ease;
}

.btn-primary {
background-color: #007bff;
color: #fff;
border: none;
}

.btn-primary:hover {
background-color: #0056b3;
color: #fff;
}

.btn-secondary {
background-color: #6c757d;
color: #fff;
border: none;
}

.btn-secondary:hover {
background-color: #5a6268;
color: #fff;
}

.btn-danger {
background-color: #dc3545;
color: #fff;
border: none;
}

.btn-danger:hover {
background-color: #c82333;
color: #fff;
}

.btn-warning {
background-color: #ffc107;
color: #212529;
border: none;
}

.btn-warning:hover {
background-color: #e0a800;
color: #212529;
}

.btn-info {
background-color: #17a2b8;
color: #fff;
border: none;
}

.btn-info:hover {
background-color: #117a8b;
color: #fff;
}

.modal-content {
background-color: #f8f9fa;
border-radius: 8px;
border: none;
}

.modal-header {
background-color: #2b2b2b;
color: #f1c40f;
border-bottom: 1px solid #f1c40f;
}

.modal-footer {
border-top: 1px solid #f1c40f;
}

.text-danger {
color: #dc3545;
}

.text-center {
text-align: center;
}

.mb-3 {
margin-bottom: 1rem;
}

#reservationForm button[type="submit"] {
background-color: #f1c40f;
color: #2b2b2b;
border: none;
font-weight: bold;
}

#reservationForm button[type="submit"]:hover {
background-color: #d4ac0d;
}

#reservationForm h5 {
font-weight: bold;
margin-top: 20px;
color: #f1c40f;
}

footer {
background-color: #311b0b;
color: #f1c40f;
padding: 20px 0;
}

.footer-main {
padding: 20px 0;
}

.footer-main ul {
list-style: none;
padding: 0;
margin: 0;
}

.footer-main ul li {
margin-bottom: 10px;
font-size: 14px;
color: #f1c40f;
}

.footer-main ul li i {
margin-right: 8px;
}

.footer-main h3 {
font-size: 18px;
margin-bottom: 15px;
color: #f1c40f;
text-transform: uppercase;
}

.social-links {
padding: 0;
margin: 0;
}

.social-links li {
display: inline-block;
margin-right: 10px;
}

.social-links li a {
color: #f1c40f;
font-size: 18px;
text-decoration: none;
}

.social-links li a:hover {
color: #f39c12;
}

.footer-copyright {
text-align: center;
font-size: 12px;
margin-top: 15px;
border-top: 1px solid #4d2c16;
padding-top: 10px;
color: #f1c40f;
}
</style> *@
