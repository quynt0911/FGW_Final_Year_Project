@model Blank.Models.Reservation
@{
    Layout = "~/Views/Shared/UserLO.cshtml";
}

<!-- Reservation Form -->
<h2 class="text-center mt-4">Make a Reservation</h2>

<!-- Reservation Form -->
<form asp-action="MakeReservation" method="post" id="reservationForm" class="mt-4">
    <!-- Selected Table -->
    <div class="mb-3">
        <label for="selectedTableField" class="form-label">Selected Table</label>
        <div style="display: flex; align-items: center;">
            <input type="text" id="selectedTableField" name="TableId" class="form-control"
                value="@ViewData["SelectedTableName"] ?? " None" readonly />
            <a href="/Table/ViewT" class="btn btn-secondary ms-3" style="white-space: nowrap;">Select Table</a>
        </div>
    </div>

    <!-- Customer Name -->
    <div class="form-group">
        <label asp-for="CustomerName">Customer Name</label>
        <input asp-for="CustomerName" class="form-control" required />
        <span asp-validation-for="CustomerName" class="text-danger"></span>
    </div>

    <!-- Restaurant Dropdown -->
    <div class="mb-3">
        <label for="RestaurantId" class="form-label">Select Restaurant</label>
        <select asp-for="RestaurantId" class="form-select" id="restaurantDropdown">
            <option value="">-- Select a Branch --</option>
            @if (ViewBag.Restaurants != null && ViewBag.Restaurants is IEnumerable<Blank.Models.Restaurant>)
            {
                foreach (var restaurant in (IEnumerable<Blank.Models.Restaurant>)ViewBag.Restaurants)
                {
                    <option value="@restaurant.RestaurantId">@restaurant.ResName</option>
                }
            }
            else
            {
                <option disabled>No restaurants available</option>
            }
        </select>
    </div>




    <!-- Location Field -->
    <div class="mb-3">
        <label class="form-label">Location</label>
        <input type="text" id="branchLocation" class="form-control" disabled />
    </div>

    <!-- Status Field -->
    <div class="mb-3">
        <label class="form-label">Status</label>
        <input asp-for="RStatus" class="form-control" value="Pending" readonly />
    </div>

    <!-- Reservation Date -->
    <div class="form-group">
        <label for="DateTime">Date and Time</label>
        <input asp-for="DateTime" type="datetime-local" class="form-control" required />
        <span asp-validation-for="DateTime" class="text-danger"></span>
    </div>

    <!-- Special Requests -->
    <div class="form-group">
        <label for="Request">Special Requests</label>
        <textarea asp-for="Request" class="form-control"></textarea>
        <span asp-validation-for="Request" class="text-danger"></span>
    </div>

    <!-- Submit Button -->
    <div class="d-flex justify-content-between mt-4">
        <button type="submit" class="btn btn-success btn-sm px-5">Submit Reservation</button>
        <a asp-action="History" class="btn btn-secondary btn-sm px-5">Back</a>
    </div>
</form>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Fetch restaurants for location updates
        const restaurants = @Html.Raw(Json.Serialize(ViewBag.Restaurants ?? new List<dynamic>()));

        const restaurantDropdown = document.getElementById("restaurantDropdown");
        const branchLocation = document.getElementById("branchLocation");

        // Update branch location on restaurant selection
        restaurantDropdown?.addEventListener("change", () => {
            const selectedId = restaurantDropdown.value;
            const selectedRestaurant = restaurants.find(r => r.restaurantId == selectedId);
            branchLocation.value = selectedRestaurant ? selectedRestaurant.location : "";
        });

        // Load selected table details from session storage
        const selectedTableName = sessionStorage.getItem("selectedTableName");
        const selectedTableId = sessionStorage.getItem("selectedTableId");

        if (selectedTableName) {
            const selectedTableField = document.getElementById("selectedTableField");
            selectedTableField.value = selectedTableName;
        }

        // Clear session storage
        sessionStorage.removeItem("selectedTableName");
        sessionStorage.removeItem("selectedTableId");
    });
</script>

@* <style>
.form-label {
font-weight: bold;
}

.form-control:focus {
border-color: #007bff;
box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

.btn-primary {
background-color: #007bff;
border: none;
}

.btn-primary:hover {
background-color: #0056b3;
}

.btn-secondary {
background-color: #6c757d;
color: #fff;
}

.btn-secondary:hover {
background-color: #5a6268;
}

.text-center {
font-weight: bold;
}
</style> *@

@* <style>
    /* Style improvements for form layout */
    .form-label {
        font-weight: bold;
    }

    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        border: none;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }

    .form-control {
        border-radius: 5px;
        padding: 10px;
        color: #212529;
        background-color: #fff;
        border: 1px solid #ced4da;
    }

    .form-control:focus {
        border-color: #f1c40f;
        box-shadow: 0 0 8px rgba(241, 196, 15, 0.5);
    }

    .form-select {
        border-radius: 5px;
        padding: 10px;
        background-color: #fff;
        color: #212529;
        border: 1px solid #ced4da;
    }

    .form-select:focus {
        border-color: #f1c40f;
        box-shadow: 0 0 8px rgba(241, 196, 15, 0.5);
    }

    /* Textarea custom styles */
    textarea.form-control {
        resize: none;
    }

    /* Button adjustments */
    .btn {
        padding: 10px 20px;
        font-size: 1rem;
        border-radius: 5px;
        text-transform: uppercase;
        font-weight: bold;
        transition: all 0.3s ease;
    }

    /* Adjust the form layout */
    #reservationForm {
        max-width: 600px;
        margin: 0 auto;
    }

    /* Apply spacing and button alignment */
    .d-flex {
        display: flex;
    }

    .w-48 {
        width: 48%;
    }

    .mt-3 {
        margin-top: 1rem;
    }

    /* Adjusted Button Styles */
    .btn-success {
        background-color: #28a745;
        /* Green color for submit button */
        border: none;
    }

    .btn-success:hover {
        background-color: #218838;
    }

    .btn-secondary {
        background-color: #6c757d;
        /* Grey color for back button */
        border: none;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
    }

    .btn-sm {
        padding: 8px 20px;
        /* Smaller button size */
        font-size: 14px;
        border-radius: 5px;
    }

    .form-label {
        font-weight: bold;
        color: #ffc107;
        /* Yellow label color */
    }

    .form-control:focus {
        border-color: #ffc107;
        box-shadow: 0 0 5px rgba(255, 193, 7, 0.5);
    }
</style> *@
