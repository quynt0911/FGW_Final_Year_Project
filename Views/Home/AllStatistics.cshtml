@model Blank.Models.StatisticsViewModel

@{
    Layout = "~/Views/Shared/AdminLO.cshtml";
}

<h2>All Statistics</h2>

<div class="row">
    <div class="col-md-6">
        <h3>Role Statistics</h3>
        <canvas id="roleChart" width="400" height="200"></canvas>
    </div>

    <div class="col-md-6">
        <h3>Reservation Statistics</h3>
        <canvas id="reservationChart" width="400" height="200"></canvas>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <h3>Task Statistics</h3>
        <canvas id="taskChart" width="400" height="200"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Role Statistics Chart
        var ctxRole = document.getElementById('roleChart').getContext('2d');
        var roleChart = new Chart(ctxRole, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.RoleStatistics.Select(x => x.RoleName).ToArray())),
                datasets: [{
                    label: 'Number of Users per Role',
                    data: @Html.Raw(Json.Serialize(Model.RoleStatistics.Select(x => x.Count).ToArray())),
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Reservation Statistics Chart
        var ctxReservation = document.getElementById('reservationChart').getContext('2d');
        var reservationChart = new Chart(ctxReservation, {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.ReservationStatistics.Select(x => x.Status).ToArray())),
                datasets: [{
                    label: 'Number of Reservations per Status',
                    data: @Html.Raw(Json.Serialize(Model.ReservationStatistics.Select(x => x.Count).ToArray())),
                    backgroundColor: ['#FF5733', '#33FF57', '#FF33FF'],
                    borderColor: '#fff',
                    borderWidth: 1
                }]
            }
        });

        // Task Statistics Chart
        var ctxTask = document.getElementById('taskChart').getContext('2d');
        var taskChart = new Chart(ctxTask, {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.TaskStatistics.Select(x => x.Status).ToArray())),
                datasets: [{
                    label: 'Number of Tasks per Status',
                    data: @Html.Raw(Json.Serialize(Model.TaskStatistics.Select(x => x.Count).ToArray())),
                    backgroundColor: ['#4CAF50', '#FFC107', '#FF5722'],
                    borderColor: '#fff',
                    borderWidth: 1
                }]
            }
        });
    </script>
}
