@model Blank.Models.Reservation
@{
    Layout = "~/Views/Shared/UserLO.cshtml";
}

<h2 class="text-center mt-4">Make a Reservation</h2>

<form asp-action="MakeReservation" method="post" id="reservationForm" class="mt-4">
    <div class="mb-3">
        <label for="selectedTableField" class="form-label">Selected Table</label>
        <div style="display: flex; align-items: center;">
            @* <input type="text" id="selectedTableField" name="TableId" class="form-control"
            value="@ViewData["SelectedTableName"] ?? " None" readonly /> *@
            <input type="text" id="selectedTableField" name="TableId" class="form-control"
                value="@(ViewData["SelectedTableName"] != null ? ViewData["SelectedTableName"] : "None")" readonly />
            <a href="/Table/ViewT" class="btn btn-secondary ms-3" style="white-space: nowrap;">Select Table</a>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="CustomerName">Customer Name</label>
        <input type="hidden" id="CustomerId" name="CustomerId" value="@ViewData["CustomerId"]" />
        <input asp-for="CustomerName" class="form-control" required />
        <span asp-validation-for="CustomerName" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label for="RestaurantId" class="form-label">Select Restaurant</label>
        <select asp-for="RestaurantId" class="form-select" id="restaurantDropdown">
            <option value="">-- Select a Branch --</option>
            @if (ViewBag.Restaurants != null && ViewBag.Restaurants is IEnumerable<Blank.Models.Restaurant>)
            {
                foreach (var restaurant in (IEnumerable<Blank.Models.Restaurant>)ViewBag.Restaurants)
                {
                    <option value="@restaurant.RestaurantId">@restaurant.ResName</option>
                }
            }
            else
            {
                <option disabled>No restaurants available</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label class="form-label">Location</label>
        <input type="text" id="branchLocation" class="form-control" disabled />
    </div>

    <div class="mb-3">
        <label class="form-label">Status</label>
        <input asp-for="RStatus" class="form-control" value="Pending" readonly />
    </div>

    <div class="form-group">
        <label for="DateTime">Date and Time</label>
        <input asp-for="DateTime" type="datetime-local" class="form-control" required />
        <span asp-validation-for="DateTime" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="Request">Special Requests</label>
        <textarea asp-for="Request" class="form-control"></textarea>
        <span asp-validation-for="Request" class="text-danger"></span>
    </div>

    <div class="d-flex justify-content-between mt-4">
        <button type="submit" class="btn btn-success btn-sm px-5">Submit Reservation</button>
        <a asp-action="History" class="btn btn-secondary btn-sm px-5">Back</a>
    </div>
</form>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const restaurants = @Html.Raw(Json.Serialize(ViewBag.Restaurants ?? new List<dynamic>()));

        const restaurantDropdown = document.getElementById("restaurantDropdown");
        const branchLocation = document.getElementById("branchLocation");

        restaurantDropdown?.addEventListener("change", () => {
            const selectedId = restaurantDropdown.value;
            const selectedRestaurant = restaurants.find(r => r.restaurantId == selectedId);
            branchLocation.value = selectedRestaurant ? selectedRestaurant.location : "";
        });

        const selectedTableName = sessionStorage.getItem("selectedTableName");
        const selectedTableId = sessionStorage.getItem("selectedTableId");

        if (selectedTableName) {
            const selectedTableField = document.getElementById("selectedTableField");
            selectedTableField.value = selectedTableId;
        }

        sessionStorage.removeItem("selectedTableName");
        sessionStorage.removeItem("selectedTableId");
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById("reservationForm");

        form.addEventListener("submit", function (event) {
            event.preventDefault(); // Ngăn form submit ngay lập tức

            // Lấy giá trị của các trường
            const tableId = document.getElementById("selectedTableField").value;
            const customerName = document.getElementById("CustomerName").value;
            const restaurantId = document.getElementById("restaurantDropdown").value;
            const dateTime = document.getElementById("DateTime").value;
            const request = document.getElementById("Request").value;

            // Lấy CustomerId từ một hidden input
            const customerId = document.getElementById("CustomerId").value;

            // Tạo thông báo dưới dạng bảng
            const message = `
                Table ID: ${tableId || "None"}\n
                Customer ID: ${customerId || "None"}\n
                Customer Name: ${customerName || "None"}\n
                Restaurant ID: ${restaurantId || "None"}\n
                Date and Time: ${dateTime || "None"}\n
                Special Request: ${request || "None"}
            `;

            // Hiển thị bảng thông báo
            if (confirm("Please confirm the reservation details:\n\n" + message)) {
                form.submit(); // Gửi form nếu xác nhận
            } else {
                alert("Submission cancelled. Please review your inputs.");
            }
        });
    });
</script>
